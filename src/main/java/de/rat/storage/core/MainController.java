package de.rat.storage.core;
import de.rat.*;
import de.rat.model.logistics.Category;
import de.rat.model.logistics.Manufacturer;
import de.rat.model.logistics.Tool;
import de.rat.model.logistics.ToolStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ToolRepository toolRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewTool (@RequestParam String itemId,
                                            @RequestParam Manufacturer manufacturer, @RequestParam String description,
                                            @RequestParam Category category, @RequestParam String stock,
                                            @RequestParam ToolStatus toolStatus,@RequestParam double rentPrice) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Tool tool = new Tool();
        tool.setDescription(description);
        tool.setManufacturer(manufacturer);
        tool.setToolStatus(toolStatus);
       toolRepository.save(tool);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Tool> getAllTools() {
        // This returns a JSON or XML with the users
        return toolRepository.findAll();
    }
}